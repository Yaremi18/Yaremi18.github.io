<button id="theme-toggle" aria-label="Toggle theme">
  {/** sun if theme is dark */}
  <svg
    class="sun"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
    <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0"></path>
    <path
      d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7"
    ></path>
  </svg>

  {/** moon if theme is light */}
  <svg
    class="moon"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
    <path
      d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z"
    ></path>
  </svg>
</button>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme") ?? "light";
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  window.localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  document
    .getElementById("theme-toggle")
    ?.addEventListener("click", handleToggleClick);
</script>

<style>
  #theme-toggle {
    width: fit-content;
    background: none;
    border: none;
    cursor: pointer;
    opacity: 0.6;
  }

  #theme-toggle:hover {
    opacity: 1;
  }

  .sun {
    position: absolute;
    stroke: transparent;
  }
  .mon {
    position: absolute;
    stroke: var(--primary-color);
  }

  :global(.dark) .sun {
    stroke: var(--primary-color);
  }
  :global(.dark) .moon {
    stroke: transparent;
  }
</style>
